// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  email        String             @unique
  passwordHash String
  name         String
  universityId String
  regNumber    String             @unique
  personalInfo PersonalInfo?
  bankinfo     BankDetails?
  uni          UniversityDetails?
  guardinan    GuardianDetails?
  upkeep             String
  fees               String

  // Add other fields as needed
}

model University {
  id       String    @id @map("_id")
  name     String
  location String
  students Student[]
}

// Define the Student model
model Student {
  id                 String     @id @map("_id")
  firstName          String
  lastName           String
  universityId       String
  regestrationNumber String     @unique
  studentEmail       String     @unique
  university         University @relation(fields: [universityId], references: [id])
  upkeep             upkeep?
  fees               Fees?

}

model Fees {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  regNumber String  @unique
  student   Student @relation(fields: [regNumber], references: [regestrationNumber])
}

model upkeep {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  regNumber String  @unique
  student   Student @relation(fields: [regNumber], references: [regestrationNumber])
}

model PersonalInfo {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  surname     String
  firstname   String
  othername   String
  dateofbirth String
  sex         String
  home        String
  phonenumber String

  userIDD User   @relation(fields: [userId], references: [id])
  userId  String @unique @db.ObjectId
}

model BankDetails {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  bankname      String
  branch        String
  accountname   String
  accountnumber String
  userIDD       User   @relation(fields: [userId], references: [id])
  userId        String @unique @db.ObjectId
}

model UniversityDetails {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  programofstudy String

  academicyear String
  yearofstudy  String
  userIDD      User   @relation(fields: [userId], references: [id])
  userId       String @unique @db.ObjectId
}

model GuardianDetails {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  Address     String
  home        String
  phonenumber String
  occupation  String
  userIDD     User   @relation(fields: [userId], references: [id])
  userId      String @unique @db.ObjectId
}
